# Code généré par Yal
.data
# Caractère de fin de ligne
finLigne:     .asciiz "\n"
booleenVrai:   .asciiz "vrai"
booleenFaux:   .asciiz "faux"
              .align 2
# Début du programme
.text
main :
	# Initialisation de s7 avec sp
	move $s7, $sp
	# Réservation de l'espace dans la pile
	addi $sp, $sp, -12
	# Chargement immédiat d'une constante entière
	li $v0, 0
	# Affectation simple
	sw $v0, 0($s7)
	# Chargement immédiat d'une constante entière
	li $v0, 0
	# Affectation simple
	sw $v0, -4($s7)
	# Chargement immédiat d'une constante entière
	li $v0, 0
	# Affectation simple
	sw $v0, -8($s7)
	# Lire un entier
	li $v0 , 5 	# $v0 <- 5 (code du read entier)
	syscall 	# le résultat de la lecture est dans $V0 
	sw $v0, 0($s7)
BOUCLE1:
	#evaluation de la condition
	# Chargement de la valeur de la variable dans v0
	lw $v0, 0($s7)
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 1
	add $sp, $sp, 4
	lw $t8, 0($sp)
	bne $t8, $v0, Vrai1
	li $v0, 0
	b FinSi1
	Vrai1 :
	li $v0, 1
	FinSi1:
	beqz $v0, BOUCLE1FIN
	# Chargement de la valeur de la variable dans v0
	lw $v0, 0($s7)
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 2
	add $sp, $sp, 4
	lw $t8, 0($sp)
	div $v0, $t8, $v0
	# Affectation simple
	sw $v0, -4($s7)
	# Chargement de la valeur de la variable dans v0
	lw $v0, -4($s7)
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 2
	add $sp, $sp, 4
	lw $t8, 0($sp)
	mult $t8, $v0
	mflo $v0
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement de la valeur de la variable dans v0
	lw $v0, 0($s7)
	add $sp, $sp, 4
	lw $t8, 0($sp)
	beq $t8, $v0, Vrai2
	li $v0, 0
	b FinSi2
	Vrai2 :
	li $v0, 1
	FinSi2:
	beqz $v0, Alors1
	# Chargement de la valeur de la variable dans v0
	lw $v0, 0($s7)
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 2
	add $sp, $sp, 4
	lw $t8, 0($sp)
	div $v0, $t8, $v0
	# Affectation simple
	sw $v0, 0($s7)
	b FinSiAlors1
	Alors1 :
	# Chargement immédiat d'une constante entière
	li $v0, 3
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement de la valeur de la variable dans v0
	lw $v0, 0($s7)
	add $sp, $sp, 4
	lw $t8, 0($sp)
	mult $t8, $v0
	mflo $v0
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 1
	add $sp, $sp, 4
	lw $t8, 0($sp)
	add $v0, $t8, $v0
	# Affectation simple
	sw $v0, 0($s7)
	FinSiAlors1:
	# Chargement de la valeur de la variable dans v0
	lw $v0, -8($s7)
	sw $v0, 0($sp)
	add $sp, $sp, -4
	# Chargement immédiat d'une constante entière
	li $v0, 1
	add $sp, $sp, 4
	lw $t8, 0($sp)
	add $v0, $t8, $v0
	# Affectation simple
	sw $v0, -8($s7)
	b BOUCLE1
BOUCLE1FIN:
	# affichage de l'expression
	# Chargement de la valeur de la variable dans v0
	lw $v0, -8($s7)
	move $a0, $v0
	li $v0, 1
	syscall
	li $v0, 4      # retour à la ligne
	la $a0, finLigne
	syscall
	move $v0, $a0
end :
    li $v0, 10
    syscall

